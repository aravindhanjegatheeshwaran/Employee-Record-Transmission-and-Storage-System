version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: dockerfile-server
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=happy
      - DB_NAME=employee_records
      - DATABASE_URL=mysql+aiomysql://root:happy@db:3306/employee_records
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-for-jwt}
      - DEBUG=False
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=employee-records
    volumes:
      - ./server:/app
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: dockerfile-client
    environment:
      - SERVER_URL=http://server:8000
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=employee-records
      - WS_URL=ws://server:8000/ws
      - COMM_MODE=${COMM_MODE:-http}
      - AUTH_USERNAME=admin
      - AUTH_PASSWORD=adminpassword
    depends_on:
      - server
    restart: on-failure

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=happy
      - MYSQL_DATABASE=employee_records
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-phappy"]
      interval: 5s
      timeout: 5s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka
    depends_on:
      - zookeeper
    restart: unless-stopped

volumes:
  mysql_data:
  kafka_data:
  zookeeper_data:
