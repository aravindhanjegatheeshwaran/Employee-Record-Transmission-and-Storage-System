# dockerfile-server

FROM python:3.10-slim

WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        default-libmysqlclient-dev \
        pkg-config \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY server/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install aiokafka==0.8.1

# Copy project files
COPY server/ .

# Expose port
EXPOSE 8000

# Create entrypoint script
RUN echo '#!/bin/sh\n\
# Wait for Kafka to be ready\n\
echo "Waiting for Kafka to be ready..."\n\
python -c "\
import socket, time\n\
kafka_host=\"kafka\"\n\
kafka_port=9092\n\
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\
while True:\n\
    try:\n\
        s.connect((kafka_host, kafka_port))\n\
        s.close()\n\
        break\n\
    except socket.error:\n\
        print(\"Waiting for Kafka...\")\n\
        time.sleep(1)\n\
"\n\
echo "Kafka is ready!"\n\
\n\
# Create database if it doesn't exist\n\
python -c "from dotenv import load_dotenv; load_dotenv(); import os, mysql.connector; \
host=os.getenv(\"DB_HOST\"); user=os.getenv(\"DB_USER\"); password=os.getenv(\"DB_PASSWORD\"); \
db_name=os.getenv(\"DB_NAME\"); \
cnx = mysql.connector.connect(host=host, user=user, password=password); \
cursor = cnx.cursor(); \
cursor.execute(f\"CREATE DATABASE IF NOT EXISTS {db_name}\"); \
cnx.close(); \
print(f\"Database {db_name} created or already exists\")"\n\
\n\
# Run migrations\n\
alembic upgrade head\n\
\n\
# Start the application\n\
exec uvicorn main:app --host 0.0.0.0 --port 8000\n\
' > /app/entrypoint.sh

RUN chmod +x /app/entrypoint.sh

# Command to run on container start
CMD ["/app/entrypoint.sh"]