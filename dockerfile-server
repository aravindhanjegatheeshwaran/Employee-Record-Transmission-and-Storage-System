# dockerfile-server

FROM python:3.10-slim

WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        default-libmysqlclient-dev \
        pkg-config \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY server/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy project files
COPY server/ .

# Expose port
EXPOSE 8000

# Create entrypoint script
RUN echo '#!/bin/sh\n\
# Wait for Kafka to be ready\n\
echo "Waiting for Kafka to be ready..."\n\
python -c "\
import socket, time\n\
kafka_host=\"kafka\"\n\
kafka_port=9092\n\
max_retries=30\n\
retry_count=0\n\
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\
while retry_count < max_retries:\n\
    try:\n\
        s.connect((kafka_host, kafka_port))\n\
        s.close()\n\
        print(\"Kafka is available!\")\n\
        break\n\
    except socket.error:\n\
        print(f\"Waiting for Kafka... {retry_count}/{max_retries}\")\n\
        retry_count += 1\n\
        time.sleep(2)\n\
"\n\
echo "Proceeding with startup..."\n\
\n\
# Wait for MySQL to be ready\n\
echo "Waiting for MySQL..."\n\
python -c "\
import time, os\n\
import mysql.connector\n\
host=os.getenv(\"DB_HOST\")\n\
user=os.getenv(\"DB_USER\")\n\
password=os.getenv(\"DB_PASSWORD\")\n\
max_retries=30\n\
retry_count=0\n\
while retry_count < max_retries:\n\
    try:\n\
        mysql.connector.connect(host=host, user=user, password=password)\n\
        print(\"MySQL is available!\")\n\
        break\n\
    except Exception as e:\n\
        print(f\"Waiting for MySQL... {retry_count}/{max_retries}\")\n\
        retry_count += 1\n\
        time.sleep(2)\n\
"\n\
\n\
# Create database if it doesn't exist\n\
python -c "\
from dotenv import load_dotenv\n\
load_dotenv()\n\
import os, mysql.connector\n\
host=os.getenv(\"DB_HOST\")\n\
user=os.getenv(\"DB_USER\")\n\
password=os.getenv(\"DB_PASSWORD\")\n\
db_name=os.getenv(\"DB_NAME\")\n\
try:\n\
    cnx = mysql.connector.connect(host=host, user=user, password=password)\n\
    cursor = cnx.cursor()\n\
    cursor.execute(f\"CREATE DATABASE IF NOT EXISTS {db_name}\")\n\
    cnx.close()\n\
    print(f\"Database {db_name} created or already exists\")\n\
except Exception as e:\n\
    print(f\"Error creating database: {e}\")\n\
"\n\
\n\
# Run migrations\n\
echo "Running database migrations..."\n\
alembic upgrade head\n\
\n\
# Start the application\n\
echo "Starting FastAPI server..."\n\
exec uvicorn main:app --host 0.0.0.0 --port 8000\n\
' > /app/entrypoint.sh

RUN chmod +x /app/entrypoint.sh

# Command to run on container start
CMD ["/app/entrypoint.sh"]